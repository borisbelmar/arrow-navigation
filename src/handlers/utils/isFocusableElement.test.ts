import isFocusableElement from './isFocusableElement'

describe('isFocusableElement', () => {
  it('should return true if the element is focusable', () => {
    const element = document.createElement('button')
    document.body.appendChild(element)
    expect(typeof element.focus).toBe('function')
    expect(isFocusableElement(element)).toBe(true)
    element.focus()
    expect(document.activeElement).toBe(element)

    const element2 = document.createElement('a')
    element2.href = 'https://www.google.com'
    document.body.appendChild(element2)
    expect(typeof element2.focus).toBe('function')
    expect(isFocusableElement(element2)).toBe(true)
    element2.focus()
    expect(document.activeElement).toBe(element2)

    const element3 = document.createElement('input')
    document.body.appendChild(element3)
    expect(typeof element3.focus).toBe('function')
    expect(isFocusableElement(element3)).toBe(true)
    element3.focus()
    expect(document.activeElement).toBe(element3)

    const element4 = document.createElement('select')
    document.body.appendChild(element4)
    expect(typeof element4.focus).toBe('function')
    expect(isFocusableElement(element4)).toBe(true)
    element4.focus()
    expect(document.activeElement).toBe(element4)

    const element5 = document.createElement('textarea')
    document.body.appendChild(element5)
    expect(typeof element5.focus).toBe('function')
    expect(isFocusableElement(element5)).toBe(true)
    element5.focus()
    expect(document.activeElement).toBe(element5)

    const element6 = document.createElement('div')
    document.body.appendChild(element6)
    element6.setAttribute('tabindex', '0')
    expect(typeof element6.focus).toBe('function')
    expect(isFocusableElement(element6)).toBe(true)
    element6.focus()
    expect(document.activeElement).toBe(element6)

    const element7 = document.createElement('div')
    document.body.appendChild(element7)
    element7.setAttribute('contenteditable', 'true')
    expect(typeof element7.focus).toBe('function')
    expect(isFocusableElement(element7)).toBe(true)
    element7.focus()
    expect(document.activeElement).toBe(element7)

    const element8 = document.createElement('div')
    document.body.appendChild(element8)
    expect(typeof element8.focus).toBe('function')
    expect(isFocusableElement(element8)).toBe(false)
    element8.focus()
    expect(document.activeElement).not.toBe(element8)
    expect(document.activeElement).toBe(element7)
  })
})
